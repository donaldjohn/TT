package mx.prisma.editor.model;

// Generated 07-jun-2015 17:10:34 by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Trayectoria generated by hbm2java
 */
@Entity
@Table(name = "Trayectoria", catalog = "PRISMA", uniqueConstraints = @UniqueConstraint(columnNames = {
		"clave", "CasoUsoElementoid" }))
public class Trayectoria implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer id;
	private String clave;
	private boolean alternativa;
	private String condicion;
	private CasoUso casoUso;
	private boolean finCasoUso;
	private Set<Paso> pasos = new HashSet<Paso>(0);
	

	public Trayectoria() {
	}

	public Trayectoria(String clave, boolean alternativa, CasoUso casoUso,
			boolean finCasoUso) {
		this.clave = clave;
		this.alternativa = alternativa;
		this.casoUso = casoUso;
		this.finCasoUso = finCasoUso;
	}

	public Trayectoria(String clave, boolean alternativa, String condicion,
			CasoUso casoUso, boolean finCasoUso) {
		this.clave = clave;
		this.alternativa = alternativa;
		this.condicion = condicion;
		this.casoUso = casoUso;
		this.finCasoUso = finCasoUso;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "clave", nullable = false)
	public String getClave() {
		return this.clave;
	}

	public void setClave(String clave) {
		this.clave = clave;
	}

	@Column(name = "alternativa", nullable = false)
	public boolean getAlternativa() {
		return this.alternativa;
	}

	public void setAlternativa(boolean alternativa) {
		this.alternativa = alternativa;
	}

	@Column(name = "condicion")
	public String getCondicion() {
		return this.condicion;
	}

	public void setCondicion(String condicion) {
		this.condicion = condicion;
	}

	@ManyToOne(fetch = FetchType.EAGER, cascade = CascadeType.ALL)
	@JoinColumn(name = "CasoUsoElementoid", referencedColumnName = "Elementoid")
	public CasoUso getCasoUso() {
		return casoUso;
	}

	public void setCasoUso(CasoUso casoUso) {
		this.casoUso = casoUso;
	}

	@Column(name = "finCasoUso", nullable = false)
	public boolean isFinCasoUso() {
		return this.finCasoUso;
	}

	public void setFinCasoUso(boolean finCasoUso) {
		this.finCasoUso = finCasoUso;
	}
	
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "trayectoria")
	public Set<Paso> getPasos() {
		return pasos;
	}

	public void setPasos(Set<Paso> pasos) {
		this.pasos = pasos;
	}

}
