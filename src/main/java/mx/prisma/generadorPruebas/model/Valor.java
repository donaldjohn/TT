package mx.prisma.generadorPruebas.model;

// Generated Oct 27, 2015 5:08:46 PM by Hibernate Tools 4.0.0

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import mx.prisma.editor.model.Entrada;
import mx.prisma.editor.model.MensajeParametro;
import mx.prisma.editor.model.ReferenciaParametro;

/**
 * Valor generated by hbm2java
 */
@Entity
@Table(name = "Valor", catalog = "PRISMA")
public class Valor implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer id;
	private TipoValor tipoValor;
	private String valor;
	private ReferenciaParametro referenciaParametro;
	private MensajeParametro mensajeParametro;
	private Entrada entrada;

	public Valor() {
	}

	public Valor(TipoValor tipoValor, String valor) {
		this.tipoValor = tipoValor;
		this.valor = valor;
	}

	public Valor(TipoValor tipoValor, String valor,
			ReferenciaParametro referenciaParametro, MensajeParametro mensajeParametro,
			Entrada entrada) {
		this.tipoValor = tipoValor;
		this.valor = valor;
		this.referenciaParametro = referenciaParametro;
		this.mensajeParametro = mensajeParametro;
		this.entrada = entrada;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "TipoValorid", referencedColumnName="id", nullable = false)
	public TipoValor getTipoValor() {
		return this.tipoValor;
	}

	public void setTipoValor(TipoValor tipoValor) {
		this.tipoValor = tipoValor;
	}

	@Column(name = "valor", nullable = false)
	public String getValor() {
		return this.valor;
	}

	public void setValor(String valor) {
		this.valor = valor;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "ReferenciaParametroid", referencedColumnName ="id", nullable = false)
	public ReferenciaParametro getReferenciaParametro() {
		return this.referenciaParametro;
	}

	public void setReferenciaParametro(ReferenciaParametro referenciaParametro) {
		this.referenciaParametro = referenciaParametro;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "Mensaje_Parametroid", referencedColumnName ="id", nullable = false)
	public MensajeParametro getMensajeParametro() {
		return this.mensajeParametro;
	}

	public void setMensajeParametro(MensajeParametro mensajeParametro) {
		this.mensajeParametro = mensajeParametro;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "Entradaid", referencedColumnName ="id", nullable = false)
	public Entrada getEntrada() {
		return this.entrada;
	}

	public void setEntrada(Entrada entrada) {
		this.entrada = entrada;
	}
	
}
